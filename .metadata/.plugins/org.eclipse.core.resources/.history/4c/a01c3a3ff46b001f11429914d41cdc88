package space.jdbc.member1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import space.jdbc.memo.DataSource;
import space.jdbc.memo.Memo;

public class JdbcCustomerDao implements CustomerDao {

	@Override
	public boolean insert(Customer customer) {
		boolean result = false;
		
		try(Connection connection = DataSource.getDataSource();
				PreparedStatement pStatement 
					= connection.prepareStatement("INSERT INTO CUSTOMER1 (ID, PASSWORD, REGDATE, UPDATEDATE)"
							+ " VALUES (?, ?, SYSDATE, SYSTIMESTAMP)")) {
			
			pStatement.setString(1, customer.getId());
			pStatement.setString(2, customer.getPassword());
			
			int rows = pStatement.executeUpdate();
			
			if(rows > 0) {
				result = true;
			}
			
		}	catch(SQLException e) {
			e.printStackTrace();
		}
		
		return result;
	}

	@Override
	public List<Customer> findAll() {
		List<Customer> customers = new ArrayList<Customer>();
		
		try (Connection connection = DataSource.getDataSource();
		PreparedStatement pStatement = connection.prepareStatement("SELECT * FROM CUSTOMER ORDER BY ID DESC FETCH FIRST 2 ROWS ONLY");
		ResultSet rs = pStatement.executeQuery()) {
		
		while(rs.next()) {
			Customer customer = new Customer(
					rs.getString("id"),
					rs.getString("password"),
					rs.getDate("regdate"),
					rs.getTimestamp("updatedate"));
			
			customers.add(customer);
		}
		
		}catch(SQLException e) {
			e.printStackTrace();
		}
		return customers;
	}

	@Override
	public Customer findById(String id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean update(Customer customer) {
		boolean result = false;
		
		try(Connection conn = DataSource.getDataSource();
			PreparedStatement pStatement
			= conn.prepareStatement("UPDATE CUSTOMER SET PASSWORD = '' , REGDATE = SYSDATE, UPDATEDATE = SYSTIMESTAMP")
		
		Class.forName(driver);
		connection = DriverManager.getConnection(url, username, password);
		
		//update
		
		
		pStatement = connection.prepareStatement("UPDATE MEMO SET content = ? WHERE id = ?");
		
		String content = "도레미";
		Long id = 24L;
		
		pStatement.setString(1, content);
		pStatement.setLong(2, id);
		
		pStatement.executeUpdate();
		
		connection.close();
	}

	@Override
	public boolean deleteById(String id) {
		// TODO Auto-generated method stub
		return false;
	}
	
}
